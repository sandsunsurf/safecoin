# This build needs at least 4Gb of memory. To tell snapcraft build environment (multipass) to make more ram in the vm, use
# the following commands at the command prompt (in the build subdir, in this case /safecoin
#  export SNAPCRAFT_BUILD_ENVIRONMENT_MEMORY=8G
#  sudo -E snapcraft
# also you must have a "clean" vm, so either delete and purge the vm instance in multipass or 
# use "snapcraft clean" before setting this variable

name: safecoin  
base: core18 
version: '1.0' 
summary: SafeCoin daemon and CLI wallet
description: |
  This will install just the SafeCoin command line wallet build.  Use 'safecoin' to run the wallet and 'safecoin.cli'
  plus a cli command to use command line wallet tools.
  You MUST run "safecoin.fetch" after the first install of this Snap in order to download the zcash parameters
  into a location that the Snap can access.

grade: devel # must be 'stable' to release into candidate/stable channels
confinement: devmode # use 'strict' once you have the right plugs and slots

parts:
  openssl:
    plugin: nil
    source: https://www.openssl.org/source/openssl-1.0.1j.tar.gz
    build-packages:
      - g++
      - build-essential
      - libtool
    override-build: |
      echo "Downgrading OpenSSL to 1.0.1j"
      sudo ./config
      sudo make
      echo "Make depends OpenSSL to 1.0.1j"
      sudo make depend
      echo "Make install OpenSSL to 1.0.1j"
      sudo make install
      echo "Linking OpenSSL to 1.0.1j"
      sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`
  safecoin:
    # See 'snapcraft plugins'
    plugin: nil
    source: .
    build-packages:
      - build-essential
      - pkg-config
      - libc6-dev
      - m4
      - g++-multilib
      - autoconf
      - libtool
      - ncurses-dev
      - unzip
      - git
      - python
      - python-zmq
      - zlib1g-dev
      - wget
      - libcurl4-gnutls-dev
      - bsdmainutils
      - automake
      - curl
      - bc 
      - dc 
      - jq
      - libboost-all-dev
    stage-packages:
      - build-essential
      - pkg-config
      - libc6-dev
      - m4
      - g++-multilib
      - autoconf
      - libtool
      - ncurses-dev
      - unzip
      - git
      - python
      - python-zmq
      - zlib1g-dev
      - wget
      - libcurl4-gnutls-dev
      - bsdmainutils
      - automake
      - curl
      - bc 
      - dc 
      - jq
      - libboost-all-dev
    override-build: |
      OPENSSL_INCLUDE_PATH=/usr/local/ssl/include OPENSSL_LIB_PATH=/usr/local/ssl/lib
      ./zcutil/build.sh -j4
      cp $SNAPCRAFT_PART_BUILD/src/safecoind $SNAPCRAFT_PART_INSTALL/bin
      cp $SNAPCRAFT_PART_BUILD/src/safecoin-cli $SNAPCRAFT_PART_INSTALL/bin
      cp zcutil/fetch-params.sh $SNAPCRAFT_PART_INSTALL/bin
    # note 11/16/2019 2015 hours, still figuring out how to build safecoin.conf in a location that the snap can access
    #override-prime: |
      #echo "#edit safecoin.conf for setup of safenodes" >> root/prime/.safecoin/safecoin.conf
  hooks:
    plugin: dump
    source: hooks/
    organize:
      bin/: snap/hooks/
hooks:
  install:
    plugs: [network, network-bind]
  post-refresh:
    plugs: [network, network-bind]
  configure:
    plugs: [network, network-bind]
apps:
  safecoin:
    command: bin/safecoind
    plugs: [home, network, network-bind]
    #daemon: simple
    environment:
      XDG_DATA_DIRS: $SNAP_USER_DATA:/var/lib/snapd/desktop:$XDG_DATA_DIRS
      home: $SNAP_USER_COMMON
      # Override HOME so the datadir is located at
      # ~/snap/safecoin/common/.safecoin/ see Denarius snapcraft.yaml for more info
      # have to figure out how to maybe use echo or cat to create a safecoin.conf and have to figure out how to download zcash params and put them in correct location
  cli:
    command: bin/safecoin-cli
    plugs: [home, network, network-bind]
    environment:
      XDG_DATA_DIRS: $SNAP_USER_DATA:/var/lib/snapd/desktop:$XDG_DATA_DIRS
      home: $SNAP_USER_COMMON
  fetch:
    command: bin/fetch-params.sh
    environment:
      home: $SNAP_USER_COMMON
      XDG_DATA_DIRS: $SNAP_USER_DATA:/var/lib/snapd/desktop:$XDG_DATA_DIRS
